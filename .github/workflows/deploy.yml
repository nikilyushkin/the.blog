# .github/workflows/deploy.yml
name: Deploy heynik.blog

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push ARM64 Image
    runs-on: ubuntu-22.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/blog:latest
            ghcr.io/${{ github.actor }}/blog:${{ github.sha }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    env:
      SSH_KEY_PATH: /tmp/ssh_key

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Make envfile
        run: export | grep "secret_" | sed "s/declare -x secret_//" > .env
        env:
          secret_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          secret_TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          secret_TELEGRAM_MAIN_CHAT_ID: ${{ secrets.TELEGRAM_MAIN_CHAT_ID }}
          secret_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          secret_PATREON_CLIENT_ID: ${{ secrets.PATREON_CLIENT_ID }}
          secret_PATREON_CLIENT_SECRET: ${{ secrets.PATREON_CLIENT_SECRET }}
          secret_EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          secret_EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          secret_EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

      - name: Add GITHUB_SHA to envfile
        run: echo "GITHUB_SHA=$GITHUB_SHA" >> .env

      - name: Write SSH key
        run: |
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH

      - name: Copy application & env to server
        run: |
          scp -o StrictHostKeyChecking=no -i $SSH_KEY_PATH -r $(pwd)/* ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/home/ubuntu/heynik.blog
          scp -o StrictHostKeyChecking=no -i $SSH_KEY_PATH .env ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/home/ubuntu/heynik.blog/.env

      - name: SSH & deploy via Docker Compose
        run: |
          ssh -i $SSH_KEY_PATH ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }} \
            "cd /home/ubuntu/heynik.blog \
             && docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} \
             && docker pull ghcr.io/${{ github.actor }}/blog:${{ github.sha }} \
             && docker compose -f docker-compose.production.yml --env-file=.env up -d \
             && docker system prune --all --force"